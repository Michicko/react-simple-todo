{"version":3,"sources":["icons/sprites.svg","components/TodoForm.js","components/TodoItem.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","todoInputValue","handleTodoInput","edit","handleSubmit","className","id","onSubmit","htmlFor","href","sprite","type","placeholder","value","onChange","TodoItem","todo","handleEdit","handleDelete","text","onClick","TodoList","todoList","map","App","genId","rnd","r16","Math","floor","toString","Date","now","repeat","replace","random","saveToStorage","todos","localStorage","setItem","JSON","stringify","useState","state","setState","setTodoInputValue","setTodoList","setEdit","useEffect","list","getItem","parse","e","target","preventDefault","newTodo","updatedTodoList","console","log","selectedTodo","find","filteredTodo","filter","newList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95803524.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/sprites.2e012832.svg\";","import sprite from '../icons/sprites.svg';\r\nconst TodoForm = ({ todoInputValue, handleTodoInput, edit, handleSubmit }) => {\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<form className='form' id='todoForm' onSubmit={handleSubmit}>\r\n\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t<label htmlFor='todoInput' className='form-label'>\r\n\t\t\t\t\t\t<span className='form-icon-box'>\r\n\t\t\t\t\t\t\t<svg className='form-icon'>\r\n\t\t\t\t\t\t\t\t<use href={sprite + \"#icon-list\"}></use>\r\n\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tid='todoInput'\r\n\t\t\t\t\t\tclassName='form-input'\r\n\t\t\t\t\t\tplaceholder='Add Todo Item'\r\n\t\t\t\t\t\tvalue={todoInputValue}\r\n\t\t\t\t\t\tonChange={handleTodoInput}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<input type='submit' value={edit ? 'Upate Item' : 'Add Item'} className={edit ? 'btn btn-success' : 'btn btn-primary'} />\r\n\t\t\t</form>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default TodoForm;\r\n","import sprite from \"../icons/sprites.svg\";\r\n\r\nconst TodoItem = ({ todo, handleEdit, handleDelete }) => {\r\n\treturn (\r\n\t\t<li className='todo-item'>\r\n\t\t\t<p className='todo-text'>{todo.text}</p>\r\n\t\t\t<div className='todo-btns'>\r\n\t\t\t\t<span onClick={handleEdit}>\r\n\t\t\t\t\t<svg className='todo-icon icon-edit'>\r\n\t\t\t\t\t\t<use href={sprite + \"#icon-pen\"}></use>\r\n\t\t\t\t\t</svg>\r\n\t\t\t\t</span>\r\n\t\t\t\t<span onClick={handleDelete}>\r\n\t\t\t\t\t<svg className='todo-icon icon-delete'>\r\n\t\t\t\t\t\t<use href={sprite + \"#icon-delete\"}></use>\r\n\t\t\t\t\t</svg>\r\n\t\t\t\t</span>\r\n\t\t\t</div>\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nexport default TodoItem;\r\n","import TodoItem from \"./TodoItem\";\r\n\r\nconst TodoList = ({ todoList, handleEdit, handleDelete }) => {\r\n  \r\n\treturn (\r\n\t\t<ul className='todo-list'>\r\n\t\t\t{todoList.map((todo) => {\r\n        return (\r\n\t\t\t\t\t<TodoItem\r\n\t\t\t\t\t\tkey={todo.id}\r\n\t\t\t\t\t\ttodo={todo}\r\n\t\t\t\t\t\thandleEdit={() => handleEdit(todo.id)}\r\n\t\t\t\t\t\thandleDelete={() => handleDelete(todo.id)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</ul>\r\n\t);\r\n};\r\n \r\nexport default TodoList;","import { useEffect, useState } from \"react\";\nimport TodoForm from \"./components/TodoForm\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n\tconst genId = (rnd = (r16) => Math.floor(r16).toString(16)) =>\n\t\trnd(Date.now() / 1000) +\n\t\t\" \".repeat(16).replace(/./g, () => rnd(Math.random() * 16));\n\n\tconst getFromStorage = () => {\n\t\tlet todos = null;\n\t\tif (localStorage.getItem('todos') === null) {\n\t\t\ttodos = [];\n\t\t} else {\n\t\t\ttodos = JSON.parse(localStorage.getItem('todos'));\n\t\t}\n\t\treturn todos;\n\t}\n\n\tconst saveToStorage = (todos) => {\n\t\tlocalStorage.setItem('todos', JSON.stringify(todos));\n\t}\n\n\t\n\n\tconst [state, setState] = useState({\n\t\ttodos: [],\n\t\tid: genId(),\n\t\ttodo: \"\",\n\t});\n\n\tconst [todoInputValue, setTodoInputValue] = useState(\"\");\n\tconst [todoList, setTodoList] = useState([]);\n  const [edit, setEdit] = useState(false);\n  \n\t// if adding localstorage - use useEffect to setTodoList\n\t// update list from storage\n\tuseEffect(() => {\n\t\t// get todos from storage and save to todoList\n\t\tconst list = getFromStorage();\n\t\tsetTodoList(list);\n\t}, []);\n\n\tconst handleTodoInput = (e) => {\n\t\tsetTodoInputValue(e.target.value);\n\t\tsetState({\n\t\t\t...state,\n\t\t\ttodo: e.target.value,\n\t\t});\n\t};\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tconst newTodo = {\n\t\t\tid: state.id,\n\t\t\ttext: todoInputValue,\n\t\t};\n\n\t\tif (newTodo.text) {\n\t\t\tconst updatedTodoList = [...state.todos, newTodo];\n\t\t\tsetState({\n\t\t\t\t...state,\n\t\t\t\tid: genId(),\n\t\t\t\ttodos: updatedTodoList,\n      });\n\t\t\tsetTodoList(updatedTodoList);\n\t\t\tsaveToStorage(updatedTodoList);\n      setTodoInputValue(\"\");\n      setEdit(false);\n\t\t} else {\n\t\t\tconsole.log(\"Please add todo\");\n\t\t}\n\t};\n\n\tconst clearList = () => {\n\t\tsetTodoList([]);\n\t\tsetState({\n\t\t\t...state,\n\t\t\ttodos: [],\n\t\t});\n\t\tsaveToStorage([]);\n\t};\n\n\tconst handleDelete = (id) => {\n\t\tconst newList = todoList.filter((todo) => todo.id !== id);\n\t\tsetTodoList(newList);\n\t\tsetState({\n\t\t\t...state,\n\t\t\ttodos: newList,\n\t\t});\n\t\tsaveToStorage(newList);\n\t};\n\n\tconst handleEdit = (id) => {\n\t\tsetEdit(true);\n\t\tconst selectedTodo = todoList.find((todo) => todo.id === id);\n\t\tconst filteredTodo = todoList.filter((todo) => todo.id !== id);\n\t\tsetTodoList(filteredTodo);\n\t\tsetTodoInputValue(selectedTodo.text);\n    setState({\n      id: selectedTodo.id,\n      todos: filteredTodo\n    });\n\t};\n\n\treturn (\n\t\t<div className='container'>\n\t\t\t<div className='content'>\n\t\t\t\t<h1 className='primary-heading text-center mb-2'>Todo input</h1>\n\t\t\t\t<div className='form-container'>\n\t\t\t\t\t<TodoForm\n\t\t\t\t\t\ttodoInputValue={todoInputValue}\n\t\t\t\t\t\thandleTodoInput={handleTodoInput}\n\t\t\t\t\t\tedit={edit}\n\t\t\t\t\t\thandleSubmit={handleSubmit}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className='todo-content'>\n\t\t\t\t\t<h1 className='primary-heading text-center mb-2'>Todo list</h1>\n\t\t\t\t\t<TodoList\n\t\t\t\t\t\ttodoList={todoList}\n\t\t\t\t\t\thandleEdit={handleEdit}\n\t\t\t\t\t\thandleDelete={handleDelete}\n\t\t\t\t\t/>\n\t\t\t\t\t<button className='btn btn-block btn-danger my-2' onClick={clearList}>\n\t\t\t\t\t\tClear list\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './css/style.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}